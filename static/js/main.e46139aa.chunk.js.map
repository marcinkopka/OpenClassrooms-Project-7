{"version":3,"sources":["components/App/Layout/SideBar/Filter/Filter.module.css","components/App/Layout/SideBar/RestaurantDetails/Reviews/AddReview/AddReview.module.css","components/App/Layout/SideBar/RestaurantDetails/RestaurantDetails.module.css","components/App/Layout/Layout.module.css","components/App/Layout/SideBar/RestaurantDetails/Reviews/Review/Review.module.css","components/App/Layout/SideBar/List/ListItem/ListItem.module.css","components/App/Layout/SideBar/Rating/Rating.module.css","components/App/Layout/AddRestaurant/AddRestaurant.module.css","containers/MapContainer/MapContainer.module.css","components/App/Layout/SideBar/List/List.module.css","components/App/Layout/SideBar/RestaurantDetails/Reviews/Reviews.module.css","components/App/App.module.css","assets/icons/utensils-solid.svg","assets/icons/times-circle-regular.svg","assets/icons/map-marker-alt-solid.svg","assets/icons/phone-solid.svg","assets/icons/at-solid.svg","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","containers/MapContainer/MapContainer.js","components/App/Layout/SideBar/Filter/Filter.js","components/App/Layout/SideBar/Rating/Rating.js","components/App/Layout/SideBar/List/ListItem/ListItem.js","components/App/Layout/SideBar/List/List.js","components/App/Layout/SideBar/RestaurantDetails/Reviews/AddReview/AddReview.js","components/App/Layout/SideBar/RestaurantDetails/Reviews/Review/Review.js","components/App/Layout/SideBar/RestaurantDetails/Reviews/Reviews.js","components/App/Layout/SideBar/RestaurantDetails/RestaurantDetails.js","components/App/Layout/SideBar/SideBar.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/App/Layout/AddRestaurant/AddRestaurant.js","components/App/Layout/Layout.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Filter","Title","Min","Max","Apply","Label","Star","Less","Value","More","AddReview","Fields","Names","FirstName","LastName","Review","Buttons","Add","Cancel","UserRating","Description","Stars","StarRated","StarNotRated","RestaurantDetails","NameAndClose","Name","Close","AverageRating","StreetVievContainer","AddressInfo","PhoneInfo","WebsiteInfo","Layout","Header","Main","Position","Marker","Info","InfoContent","ReviewContainer","AuthorPhoto","AuthorLetterContainer","AuthorLetter","AuthorName","ReviewRating","ReviewText","ListItem","PlaceDescription","PlaceName","PlaceVicinity","PlacePhoto","Rating","RatingNumber","RatingStars","StarsRatingSprite","StarsRatingSpriteRating","NoRating","AddRestaurant","MapContainer","Map","SideBar","GeoInfo","List","NotFound","Reviews","App","__webpack_require__","p","Modal","Backdrop","map","newLat","newLng","lastAverageRating","filter","props","react_default","a","createElement","className","classes","disabled","filterButtonsDisabled","minLess","onClick","updateFiltersHandler","id","filterData","filterMin","minMore","maxLess","filterMax","maxMore","resetFilter","starsRating","rating","percentRating","ratingContent","Number","toFixed","style","width","Fragment","listItem","placePhotoUrl","placeData","photos","getUrl","maxWidth","maxHeight","restaurantIcon","ratingValue","placePicture","referrerPolicy","src","alt","index","lastAverageRatings","findIndex","elem","place_id","restaurantDetailsShowHandler","name","vicinity","list","listItems","listStatus","googlePlacesFiltered","placeElement","key","bind","addReview","stars","starValue","starsArray","i","newReviewData","userRating","push","newReviewDataChangeHandler","type","spellCheck","value","firstName","onChange","required","lastName","rows","review","addReviewButtonDisabled","cancelAddingReview","authorPhoto","reviewData","profile_photo_url","author_name","charAt","text","reviews","addReviewContent","addButtonContent","addingReviewStatus","reviewsData","length","reviewElement","addingReviewShowHandler","document","getElementById","scrollIntoView","lat","lng","_this","this","restaurantDetailsData","geometry","location","phoneNumber","websiteAddress","streetViewRequest","placeDetails","formatted_phone_number","website","newReviews","forEach","countAverageRating","getLastAverageRating","title","closeIcon","restaurantDetailsHideHandler","addressIcon","phoneIcon","websiteIcon","href","target","Component","sidebar","sideBarContent","restaurantDetailsShowStatus","SideBar_RestaurantDetails_RestaurantDetails","backdrop","addingRestaurantStatus","addingRestaurantHideHandler","modal","transform","opacity","children","addRestaurant","newRestaurantData","newRestaurantDataChangeHandler","phone","addRestaurantButtonDisabled","cancelAddingRestaurant","markers","visibleOnMap","startingCenter","state","jsonPlaces","googlePlaces","newRestaurants","geolocationPermission","renderMap","url","window","getElementsByTagName","script","async","defer","parentNode","insertBefore","loadScript","initMap","google","maps","center","zoom","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","setCenter","setUserMarker","error","code","PERMISSION_DENIED","setState","addListener","updatePlaces","event","latLng","addingRestaurantShowHandler","removeMarkers","actualCenter","getCenter","actualCenterLat","actualCenterLng","actualBounds","getBounds","places","Object","toConsumableArray","jsonPlace","nearbySearchRequest","radius","PlacesService","nearbySearch","nearbySearchResults","status","PlacesServiceStatus","OK","place","checkVisibilityOnMap","numOfRatings","sum","findLat","findLng","contains","addMarkers","applyFiltersHandler","infoWindow","InfoWindow","marker","infoWindowContent","divName","fontWeight","innerHTML","divVicinity","appendChild","setContent","open","setMap","switchMarkerBounceOn","markerIndex","setAnimation","Animation","BOUNCE","switchMarkerBounceOff","animation","DROP","icon","zIndex","objectSpread","filterButtonsDisabledUpdate","averageRating","placeId","dataElement","placeDetailsRequest","fields","getDetails","placeDetailsResults","addingReviewHideHandler","updateLastAverageRatings","resetNewRestaurantData","disableAddRestaurantButton","newValue","replace","enableAddRestaurantButton","preventDefault","lastPlaceId","test","newAddress","geocodeRequest","Geocoder","geocode","geocodeResults","streetNumber","streetName","cityName","premise","address_components","j","types","long_name","unshift","newCenter","LatLng","panTo","resetNewReviewData","disableAddReviewButton","enableAddReviewButton","newReview","newPlace","newAverageRating","_this2","restaurantsDataFile","require","jsonRestaurants","geoInfo","layout","containers_MapContainer_MapContainer","Boolean","hostname","match","ReactDOM","render","components_App_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e46139aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1i7ZJ\",\"Title\":\"Filter_Title__1lkiW\",\"Min\":\"Filter_Min__1OcO9\",\"Max\":\"Filter_Max__SFqVo\",\"Apply\":\"Filter_Apply__2BsPY\",\"Label\":\"Filter_Label__1RfH5\",\"Star\":\"Filter_Star__1zSfy\",\"Less\":\"Filter_Less__lSha1\",\"Value\":\"Filter_Value__1Ul5W\",\"More\":\"Filter_More__1hh0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddReview\":\"AddReview_AddReview__3M8YE\",\"Fields\":\"AddReview_Fields__3c2G-\",\"Names\":\"AddReview_Names__2V0q-\",\"FirstName\":\"AddReview_FirstName__1yze8\",\"LastName\":\"AddReview_LastName__Ko3vz\",\"Review\":\"AddReview_Review__2Qk9U\",\"Buttons\":\"AddReview_Buttons__2Giii\",\"Add\":\"AddReview_Add__zEYg_\",\"Cancel\":\"AddReview_Cancel__1zuVp\",\"UserRating\":\"AddReview_UserRating__IIGwK\",\"Description\":\"AddReview_Description__c9s_J\",\"Stars\":\"AddReview_Stars__3zSQY\",\"StarRated\":\"AddReview_StarRated__3EcCR\",\"StarNotRated\":\"AddReview_StarNotRated__JuHbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RestaurantDetails\":\"RestaurantDetails_RestaurantDetails__2IsrY\",\"Title\":\"RestaurantDetails_Title__tm5zD\",\"NameAndClose\":\"RestaurantDetails_NameAndClose__CakhO\",\"Name\":\"RestaurantDetails_Name__4s-2o\",\"Close\":\"RestaurantDetails_Close__1fn3A\",\"AverageRating\":\"RestaurantDetails_AverageRating__2RrDf\",\"StreetVievContainer\":\"RestaurantDetails_StreetVievContainer__PFrBz\",\"AddressInfo\":\"RestaurantDetails_AddressInfo__x-Zhz\",\"PhoneInfo\":\"RestaurantDetails_PhoneInfo__3ivBq\",\"WebsiteInfo\":\"RestaurantDetails_WebsiteInfo__IFW90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2qyTg\",\"Header\":\"Layout_Header__1zkcm\",\"Title\":\"Layout_Title__Ryc12\",\"Main\":\"Layout_Main__1T67F\",\"Position\":\"Layout_Position__3z6wW\",\"Marker\":\"Layout_Marker__359e1\",\"Description\":\"Layout_Description__1Kc_Z\",\"Info\":\"Layout_Info__1Zhf6\",\"InfoContent\":\"Layout_InfoContent__3EOzm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReviewContainer\":\"Review_ReviewContainer__20Rhq\",\"AuthorPhoto\":\"Review_AuthorPhoto__3YLhJ\",\"AuthorLetterContainer\":\"Review_AuthorLetterContainer__3krss\",\"AuthorLetter\":\"Review_AuthorLetter__3RQqH\",\"Review\":\"Review_Review__1zVYO\",\"AuthorName\":\"Review_AuthorName__7nHZf\",\"ReviewRating\":\"Review_ReviewRating__2JkC7\",\"ReviewText\":\"Review_ReviewText__3GBRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ListItem_ListItem__30QVX\",\"PlaceDescription\":\"ListItem_PlaceDescription__13aNy\",\"PlaceName\":\"ListItem_PlaceName__3VvlV\",\"PlaceVicinity\":\"ListItem_PlaceVicinity__2bW92\",\"AverageRating\":\"ListItem_AverageRating__3CExo\",\"PlacePhoto\":\"ListItem_PlacePhoto__22RUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rating\":\"Rating_Rating__1YSU7\",\"RatingNumber\":\"Rating_RatingNumber__2vxhM\",\"RatingStars\":\"Rating_RatingStars__DTCa6\",\"StarsRatingSprite\":\"Rating_StarsRatingSprite__3SVGD\",\"StarsRatingSpriteRating\":\"Rating_StarsRatingSpriteRating__3HNCa\",\"NoRating\":\"Rating_NoRating__1iC_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddRestaurant\":\"AddRestaurant_AddRestaurant__34mFQ\",\"Fields\":\"AddRestaurant_Fields__1sTcu\",\"Buttons\":\"AddRestaurant_Buttons__37SyJ\",\"Add\":\"AddRestaurant_Add__Osi-S\",\"Cancel\":\"AddRestaurant_Cancel__2QO4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MapContainer\":\"MapContainer_MapContainer__2VdW7\",\"Map\":\"MapContainer_Map__3LOHl\",\"SideBar\":\"MapContainer_SideBar__3x1eI\",\"GeoInfo\":\"MapContainer_GeoInfo__1lM9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__1Folm\",\"NotFound\":\"List_NotFound__37jAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Reviews\":\"Reviews_Reviews__E6PMY\",\"Header\":\"Reviews_Header__1WUsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2I4hq\"};","module.exports = __webpack_public_path__ + \"static/media/utensils-solid.631542a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/times-circle-regular.550b0f92.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-marker-alt-solid.c8fed0b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone-solid.daf00ead.svg\";","module.exports = __webpack_public_path__ + \"static/media/at-solid.a7dcae6f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__TH54B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2HvAg\"};","import React, { Component } from 'react';\nimport classes from './MapContainer.module.css';\nimport SideBar from '../../components/App/Layout/SideBar/SideBar';\nimport Modal from '../../components/UI/Modal/Modal';\nimport AddRestaurant from '../../components/App/Layout/AddRestaurant/AddRestaurant';\n\nlet map;\nlet markers = [];\nlet visibleOnMap = [];\nlet newLat;\nlet newLng;\nlet lastAverageRating;\nlet startingCenter = {lat: 53.799241150620674, lng: -1.5418059473662424};\n\nclass MapContainer extends Component {\n  state = {\n    jsonPlaces: [],\n    googlePlaces: [],\n    googlePlacesFiltered: [],\n    listStatus: 'loading',\n    restaurantDetailsShowStatus: false,\n    restaurantDetailsData: null,\n    filter: {\n      filterMin: 0,\n      filterMax: 5\n    },\n    filterButtonsDisabled: {\n      minLess: true,\n      minMore: false,\n      maxLess: false,\n      maxMore: true\n    },\n    addingRestaurantStatus: false,\n    newRestaurantData: {\n      name: '',\n      phone: '',\n      website: ''\n    },\n    addRestaurantButtonDisabled: true,\n    newRestaurants: [],\n    addingReviewStatus: false,\n    newReviewData: {\n      firstName: '',\n      lastName: '',\n      review: '',\n      userRating: 0\n    },\n    addReviewButtonDisabled: true,\n    newReviews: [],\n    lastAverageRatings: [],\n    geolocationPermission: true\n  }\n  \n  componentDidMount() {\n    // Loading data from json file\n    let restaurantsDataFile = require('../../data/restaurantsData.json');\n    restaurantsDataFile.jsonRestaurants.forEach((place) => {\n      let rating = this.countAverageRating(place.placeDetails.reviews);\n      place.rating = rating;\n    });\n    this.setState({jsonPlaces: restaurantsDataFile.jsonRestaurants}, this.renderMap());\n  }\n  \n  // Loading Map function\n  renderMap = () => {\n    loadScript('https://maps.googleapis.com/maps/api/js?key=AIzaSyCB5-GzZHw_xyz2Aj9-p5XDVEkrIUb1cD8&libraries=places&callback=initMap');\n    window.initMap = this.initMap;\n  }\n  \n  // Init map callback function\n  initMap = () => {\n    map = new window.google.maps.Map(document.getElementById('map'), {\n      center: startingCenter,\n      zoom: 16\n    });\n    \n    // Getting geolocation\n    navigator.geolocation.getCurrentPosition(\n      // When user will allow browser to know his location\n      (position) => {\n        let pos = {lat: position.coords.latitude, lng: position.coords.longitude};\n        map.setCenter(pos);\n        this.setUserMarker(pos, map);\n      },\n      // When user will not allow browser to know his location\n      (error) => {\n        if (error.code === error.PERMISSION_DENIED) {\n          this.setUserMarker(startingCenter, map);\n          this.setState({geolocationPermission: false});\n        }\n      }\n    );\n    \n    // When map is idle event listener\n    map.addListener('idle', () => {\n      if (this.state.restaurantDetailsShowStatus) {\n        this.restaurantDetailsHideHandler();\n      }\n      this.updatePlaces();\n    });\n    \n    // When user right click on a map event listener\n    map.addListener('rightclick', (event) => {\n      newLat = event.latLng.lat();\n      newLng = event.latLng.lng();\n      this.addingRestaurantShowHandler();\n    });\n  }\n  \n  // Updating places method\n  updatePlaces = () => {\n    // Removing markers from a map\n    this.removeMarkers();\n    // Reseting visible on a map array\n    visibleOnMap = [];\n    // Setting list status to loading\n    this.setState({listStatus: 'loading'});\n    // Getting actual map center\n    let actualCenter = map.getCenter();\n    let actualCenterLat = actualCenter.lat();\n    let actualCenterLng = actualCenter.lng();\n    // Getting actual map bounds\n    let actualBounds = map.getBounds();\n    let places = [];\n    if (this.state.newRestaurants.length !== 0) {\n      places = [...this.state.newRestaurants];\n      let jsonPlaces = [...this.state.jsonPlaces];\n      jsonPlaces.forEach((jsonPlace) => {\n        places.push(jsonPlace);\n      });\n    } else {\n      places = [...this.state.jsonPlaces];\n    }\n    // Creating nearby search request\n    let nearbySearchRequest = {\n      location: {lat: actualCenterLat, lng: actualCenterLng},\n      radius: '500',\n      type: ['restaurant']\n    };\n    // Sending nearby search request\n    let nearbySearchService = new window.google.maps.places.PlacesService(map);\n    nearbySearchService.nearbySearch(nearbySearchRequest, (nearbySearchResults, status) => {\n      // When nearby search response is received\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        nearbySearchResults.forEach((place) => {\n          // If place has no rating yet then setting rating to zero\n          if (!place.rating) {\n            place.rating = 0;\n          } else {\n            place.rating = place.rating.toFixed(1);\n          }\n          // Adding place to places array\n          places.push(place);\n        });\n        this.checkVisibilityOnMap(places, actualBounds);\n      } else {\n        this.checkVisibilityOnMap(places, actualBounds);\n      }\n    });\n  }\n  \n  // Counting average rating from reviews method\n  countAverageRating = (reviews) => {\n    let averageRating = 0;\n    let numOfRatings = reviews.length;\n    let sum = 0;\n    reviews.forEach((review) => {\n      let rating = review.rating;\n      sum += rating;\n    });\n    averageRating = sum / numOfRatings;\n    return averageRating;\n  }\n  \n  // Checking if place is in actual map bounds method\n  checkVisibilityOnMap = (places, actualBounds) => {\n    places.forEach((place) => {\n      // Getting place latitude\n      let lat = this.findLat(place);\n      // Getting place longitude\n      let lng = this.findLng(place);\n      // If actual map bounds contains coordinates of the place...\n      if (actualBounds.contains({lat, lng})) {\n        // ... then adding place to visible on a map array\n        visibleOnMap.push(place);\n      }\n    });\n    if (visibleOnMap.length === 0) {\n      this.setState({listStatus: 'notInMapBounds'});\n      this.setState({googlePlacesFiltered: []});\n    } else {\n      this.setState({googlePlaces: visibleOnMap});      \n      if ((this.state.filter.filterMin === 0) && (this.state.filter.filterMax === 5)) {\n        this.setState({googlePlacesFiltered: visibleOnMap});\n        this.setState({listStatus: 'loaded'});\n        this.addMarkers(visibleOnMap);\n      } else {\n        this.applyFiltersHandler(this.state.filter);\n        this.setState({listStatus: 'loaded'});\n      }\n    }\n  }\n  \n  // Finding latitude method\n  findLat = (place) => {\n    let lat;\n    if (place.lat) {\n      lat = place.lat;\n    } else {\n      lat = place.geometry.location.lat();\n    }\n    return lat;\n  }\n  \n  // Finding longitude method\n  findLng = (place) => {\n    let lng;\n    if (place.lng) {\n      lng = place.lng;\n    } else {\n      lng = place.geometry.location.lng();\n    }\n    return lng;\n  }\n  \n  // Adding markers and info window for every visible restaurant on a map method\n  addMarkers = (places) => {\n    // Creating info window\n    let infoWindow = new window.google.maps.InfoWindow({});\n    places.forEach((place) => {\n      let marker = new window.google.maps.Marker({\n        position: {lat: this.findLat(place), lng: this.findLng(place)},\n        map: map,\n        title: place.name\n      });\n      markers.push(marker);\n      // Setting info window content\n      let infoWindowContent = document.createElement('div');\n      let divName = document.createElement('div');\n      divName.style.fontWeight = '700';\n      divName.innerHTML = place.name;\n      let divVicinity = document.createElement('div');\n      divVicinity.innerHTML = place.vicinity;\n      infoWindowContent.appendChild(divName);\n      infoWindowContent.appendChild(divVicinity);\n      // Adding event listener for marker\n      marker.addListener('click', () => {\n      infoWindow.setContent(infoWindowContent);\n      infoWindow.open(map, marker);\n      });\n    });\n  }\n  \n  // Removing markers from a map method\n  removeMarkers = () => {\n    if (markers.length !== 0) {\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      markers = [];\n    }\n  }\n  \n  // Switching marker bounce for clicked restaurant on\n  switchMarkerBounceOn = (lat, lng) => {\n    let markerIndex = markers.findIndex(marker => (marker.position.lat() === lat) && (marker.position.lng() === lng));\n    markers[markerIndex].setAnimation(window.google.maps.Animation.BOUNCE);\n  }\n  \n  // Switching marker bounce off\n  switchMarkerBounceOff = () => {\n    markers.forEach((marker) => {\n      if (marker.animation === 1) {\n        marker.setAnimation(null);\n      }\n    });\n  }\n  \n  // Placing user marker method\n  setUserMarker = (center, map) => {\n    new window.google.maps.Marker({\n      position: center,\n      map: map,\n      animation: window.google.maps.Animation.DROP,\n      icon: {url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'},\n      title:'Your Position',\n      zIndex: 100\n    });\n  }\n  \n  // Updating filter criteria method\n  updateFiltersHandler = (event) => {\n    let filter = {...this.state.filter};\n    switch (event.target.id) {\n      case \"minLess\":\n        filter.filterMin -= 1;\n        break;\n      case \"minMore\":\n        filter.filterMin += 1;\n        break;\n      case \"maxLess\":\n        filter.filterMax -= 1;\n        break;\n      case \"maxMore\":\n        filter.filterMax += 1;\n        break;\n      default:\n        break;\n    }\n    if (filter.filterMax < filter.filterMin) {\n      filter.filterMax = filter.filterMin;\n    }\n    this.setState({filter: filter});\n    this.filterButtonsDisabledUpdate(filter);\n  }\n  \n  // Updating filter buttons disabled criteria method\n  filterButtonsDisabledUpdate = (filter) => {\n    let filterButtonsDisabled = {...this.state.filterButtonsDisabled}\n    // Filter minLess button\n    if (filter.filterMin > 0) {\n      filterButtonsDisabled.minLess = false;\n    } else if (filter.filterMin === 0) {\n      filterButtonsDisabled.minLess = true;\n    }\n    // Filter minMore button\n    if (filter.filterMin < 5) {\n      filterButtonsDisabled.minMore = false;\n    } else if (filter.filterMin === 5) {\n      filterButtonsDisabled.minMore = true;\n    }\n    // Filter maxLess button\n    if (filter.filterMax > filter.filterMin) {\n      filterButtonsDisabled.maxLess = false;\n    } else if (filter.filterMax === filter.filterMin) {\n      filterButtonsDisabled.maxLess = true;\n    }\n    // Filter maxMore button\n    if (filter.filterMax < 5) {\n      filterButtonsDisabled.maxMore = false;\n    } else if (filter.filterMax === 5) {\n      filterButtonsDisabled.maxMore = true;\n    }\n    this.setState({filterButtonsDisabled: filterButtonsDisabled});\n    this.applyFiltersHandler(filter);\n  }\n  \n  // Applying filter criteria method\n  applyFiltersHandler = (filter) => {\n    let filterMin = filter.filterMin;\n    let filterMax = filter.filterMax;\n    let googlePlacesFiltered = [];\n    visibleOnMap.forEach((placeElement) => {\n      let averageRating;\n      let index = this.state.lastAverageRatings.findIndex((elem) => (elem.place_id === placeElement.place_id));\n      if (index !== -1) {\n        averageRating = this.state.lastAverageRatings[index].lastAverageRating;\n      } else {\n        averageRating = placeElement.rating;\n      }\n      if ((averageRating >= filterMin) && (averageRating <= filterMax)) {\n        googlePlacesFiltered.push(placeElement);\n      }\n    });\n    if (googlePlacesFiltered.length === 0) {\n      if (visibleOnMap.length === 0) {\n        this.setState({listStatus: 'notInMapBounds'});\n      } else {\n        this.setState({listStatus: 'notInFilterCriteria'});\n        this.removeMarkers();\n      }\n    } else {\n      this.setState({googlePlacesFiltered: googlePlacesFiltered});\n      // Setting list status to loaded\n      this.setState({listStatus: 'loaded'});\n      this.removeMarkers();\n      this.addMarkers(googlePlacesFiltered);\n    }\n  }\n  \n  // Reseting filter criteria method\n  resetFilter = () => {\n    if ((this.state.filter.filterMin !== 0 || this.state.filter.filterMax !== 5)) {\n      let filter = {...this.state.filter};\n      filter.filterMin = 0;\n      filter.filterMax = 5;\n      this.setState({filter: filter});\n      this.filterButtonsDisabledUpdate(filter);\n    }\n  }\n  \n  // Showing restaurant details method\n  restaurantDetailsShowHandler = (placeId) => {\n    let restaurantDetailsData;\n    if (typeof placeId === 'number') {\n      let jsonPlaces = [...this.state.jsonPlaces];\n      let index = jsonPlaces.findIndex(dataElement => dataElement.place_id === placeId);\n      if (index !== -1) {\n        restaurantDetailsData = jsonPlaces[index];\n      } else {\n        let newRestaurants = [...this.state.newRestaurants];\n        index = newRestaurants.findIndex(dataElement => dataElement.place_id === placeId);\n        restaurantDetailsData = newRestaurants[index];\n      }\n      this.setState({restaurantDetailsData: restaurantDetailsData});\n      this.setState({restaurantDetailsShowStatus: true});\n      this.switchMarkerBounceOn(this.findLat(restaurantDetailsData), this.findLng(restaurantDetailsData));\n    } else {\n      // Creating place details service request\n      let placeDetailsRequest = {\n        placeId: placeId,\n        fields: ['formatted_phone_number', 'reviews', 'website']\n      };\n      let placeDetailsService = new window.google.maps.places.PlacesService(map);\n      // Sending place details request\n      placeDetailsService.getDetails(placeDetailsRequest, (placeDetailsResults, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          let googlePlaces = [...this.state.googlePlaces];\n          let index = googlePlaces.findIndex(dataElement => dataElement.place_id === placeId);\n          restaurantDetailsData = googlePlaces[index];\n          restaurantDetailsData.placeDetails = placeDetailsResults;\n          this.setState({restaurantDetailsData: restaurantDetailsData});\n          this.setState({restaurantDetailsShowStatus: true});\n          this.switchMarkerBounceOn(this.findLat(restaurantDetailsData), this.findLng(restaurantDetailsData));\n        }\n      });\n    }\n  }\n  \n  // Hiding restaurant details method\n  restaurantDetailsHideHandler = () => {\n    this.addingReviewHideHandler();\n    this.setState({restaurantDetailsShowStatus: false});\n    this.switchMarkerBounceOff();\n    this.updateLastAverageRatings();\n  }\n  \n  // Showing add new restaurant component method\n  addingRestaurantShowHandler = () => {\n    this.setState({addingRestaurantStatus: true});\n  }\n  \n  // Hiding add new restaurant component method\n  addingRestaurantHideHandler = () => {\n    this.resetNewRestaurantData();\n    this.disableAddRestaurantButton();\n    this.setState({addingRestaurantStatus: false});\n  }\n  \n  // Changing new restaurant data method\n  newRestaurantDataChangeHandler = (event) => {\n    let newRestaurantData = {...this.state.newRestaurantData};\n    const name = event.target.name;\n    const value = event.target.value;\n    let newValue = value;\n    newRestaurantData[name] = newValue;\n    // Checking if restaurant name field contains only white spaces\n    if (newRestaurantData.name.replace(/\\s/g, '').length) {\n      this.enableAddRestaurantButton();\n    } else {\n      this.disableAddRestaurantButton();\n    }\n    this.setState({newRestaurantData: newRestaurantData});\n  }\n  \n  // Enabling add restaurant button method\n  enableAddRestaurantButton = () => {\n    this.setState({addRestaurantButtonDisabled: false});\n  }\n  \n  // Disabling add restaurant button method\n  disableAddRestaurantButton = () => {\n    this.setState({addRestaurantButtonDisabled: true});\n  }\n  \n  // Add new restaurant button handler method\n  addRestaurant = (event) => {\n    event.preventDefault();\n    let lastPlaceId = 0;\n    let placesToFindLastId;\n    if (this.state.newRestaurants.length !== 0) {\n      placesToFindLastId = [...this.state.newRestaurants];\n    } else {\n      placesToFindLastId = [...this.state.jsonPlaces];\n    }\n    placesToFindLastId.forEach((place) => {\n      if (place.place_id > lastPlaceId) {\n        lastPlaceId = place.place_id;\n      }\n    });\n    let newRestaurantData = {};\n    newRestaurantData.place_id = lastPlaceId + 1;\n    newRestaurantData.lat = newLat;\n    newRestaurantData.lng = newLng;\n    newRestaurantData.name = this.state.newRestaurantData.name;\n    newRestaurantData.placeDetails = {};\n    if (this.state.newRestaurantData.phone) {\n      newRestaurantData.placeDetails.formatted_phone_number = this.state.newRestaurantData.phone;\n    }\n    if (this.state.newRestaurantData.website) {\n      newRestaurantData.placeDetails.website = this.state.newRestaurantData.website;\n      // Checking if website address starts with http:// or https://\n      let addressRegex = /^http:\\/\\/|^https:\\/\\//;\n      if (!addressRegex.test(newRestaurantData.placeDetails.website)) {\n        // If not then add http:// at the beggining of the address\n        let begin = 'http://';\n        newRestaurantData.placeDetails.website = begin + newRestaurantData.placeDetails.website;\n      }\n    }\n    newRestaurantData.rating = 0;\n    let newAddress = 'Address not available';\n    // Creating reverse geocoding request\n    let geocodeRequest = {\n      location: {lat: newLat, lng: newLng}\n    };\n    // Sending geocoding request\n    let geocodingService = new window.google.maps.Geocoder(map);\n    geocodingService.geocode(geocodeRequest, (geocodeResults, status) => {\n      if (status === 'OK') {\n        if (geocodeResults[0]) {\n          let streetNumber = '';\n          let streetName = '';\n          let cityName = '';\n          let premise = '';\n          for (let i = 0; i < geocodeResults[0].address_components.length; i++) {\n            for (let j = 0; j < geocodeResults[0].address_components[i].types.length; j++) {\n              switch (geocodeResults[0].address_components[i].types[j]) {\n                case 'street_number':\n                  streetNumber = geocodeResults[0].address_components[i].long_name;\n                  break;\n                case 'route':\n                  streetName = geocodeResults[0].address_components[i].long_name;\n                  break;\n                case 'postal_town':\n                  cityName = geocodeResults[0].address_components[i].long_name;\n                  break;\n                case 'premise':\n                  premise = geocodeResults[0].address_components[i].long_name;\n                  break;\n              }\n            }\n          }\n          if ((streetNumber !== '') && (streetName !== '') && (cityName !== '')) {\n            newAddress = streetNumber + ' ' + streetName + ', ' + cityName;\n          }\n          if ((streetNumber === '') && (premise !== '') && (streetName !== '') && (cityName !== '')) {\n            newAddress = premise + ', ' + streetName + ', ' + cityName;\n          } \n        }\n      }\n      newRestaurantData.vicinity = newAddress;\n      let newRestaurants = [...this.state.newRestaurants];\n      newRestaurants.unshift(newRestaurantData);\n      this.setState({newRestaurants: newRestaurants});\n      this.updatePlaces();\n      let newCenter = new window.google.maps.LatLng(newLat,newLng);\n      map.panTo(newCenter);\n      this.addingRestaurantHideHandler();\n    });\n    this.resetFilter();\n  }\n  \n  // Cancel add new restaurant button handler method\n  cancelAddingRestaurant = (event) => {\n    event.preventDefault();\n    this.resetNewRestaurantData();\n    this.addingRestaurantHideHandler();\n  }\n  \n  // Reseting new restaurant data method\n  resetNewRestaurantData = () => {\n    this.setState({\n      newRestaurantData: {\n      name: '',\n      phone: '',\n      website: ''\n      }\n    });\n  }\n  \n  // Showing adding review form\n  addingReviewShowHandler = () => {\n    this.resetNewReviewData();\n    this.disableAddReviewButton();\n    this.setState({addingReviewStatus: true});\n  }\n  \n  // Hiding adding review form\n  addingReviewHideHandler = () => {\n    this.setState({addingReviewStatus: false});\n  }\n  \n  // Changing new review data method\n  newReviewDataChangeHandler = (event) => {\n    let newReviewData = {...this.state.newReviewData}\n    if (event.target.name) {\n      const name = event.target.name;\n      const value = event.target.value;\n      newReviewData[name] = value;\n    } else {\n      const id = event.target.id;\n      newReviewData.userRating = id;\n    }\n    if (((newReviewData.firstName.length !== 0) && (newReviewData.firstName.replace(/\\s/g, '').length)) && ((newReviewData.lastName.length !== 0) && (newReviewData.lastName.replace(/\\s/g, '').length)) && ((newReviewData.review.length !== 0) && (newReviewData.review.replace(/\\s/g, '').length)) && (newReviewData.userRating !== 0)) {\n      this.enableAddReviewButton();\n    } else {\n      this.disableAddReviewButton();\n    }\n    this.setState({newReviewData: newReviewData});\n  }\n  \n  // Enabling add review button method\n  enableAddReviewButton = () => {\n    this.setState({addReviewButtonDisabled: false});\n  }\n  \n  // Disabling add review button method\n  disableAddReviewButton = () => {\n    this.setState({addReviewButtonDisabled: true});\n  }\n  \n  // Adding review method\n  addReview = (event) => {\n    event.preventDefault();\n    let newReviewData = {...this.state.newReviewData};\n    let newReviews = [...this.state.newReviews];\n    let place_id = this.state.restaurantDetailsData.place_id;\n    let author_name = newReviewData.firstName + ' ' + newReviewData.lastName;\n    let rating = newReviewData.userRating;\n    let text = newReviewData.review;\n    let newReview = {};\n    newReview.author_name = author_name;\n    newReview.rating = Number(rating);\n    newReview.text = text;\n    let index = newReviews.findIndex(elem => (elem.place_id === place_id));\n    if (index === -1) {\n      let newPlace = {};\n      newPlace.place_id = place_id;\n      newPlace.reviews = [];\n      newPlace.reviews.push(newReview);\n      newReviews.push(newPlace);\n    } else {\n      newReviews[index].reviews.unshift(newReview);\n    }\n    this.setState({newReviews: newReviews});\n    this.addingReviewHideHandler();\n  }\n  \n  // Canceling adding review method\n  cancelAddingReview = (event) => {\n    event.preventDefault();\n    this.addingReviewHideHandler();\n  }\n  \n  // Reseting new review data method\n  resetNewReviewData = () => {\n    this.setState({\n      newReviewData: {\n        firstName: '',\n        lastName: '',\n        review: '',\n        userRating: 0\n      }\n    });\n  }\n  \n  getLastAverageRating = (rating) => {\n    lastAverageRating = rating;\n  }\n  \n  updateLastAverageRatings = () => {\n    let lastAverageRatings = [...this.state.lastAverageRatings];\n    let index = lastAverageRatings.findIndex((elem) => (elem.place_id === this.state.restaurantDetailsData.place_id));\n    if (index === -1) {\n      let newAverageRating = {};\n      newAverageRating.place_id = this.state.restaurantDetailsData.place_id;\n      newAverageRating.lastAverageRating = lastAverageRating;\n      lastAverageRatings.push(newAverageRating);\n    } else {\n      lastAverageRatings[index].lastAverageRating = lastAverageRating;\n    }\n    this.setState({lastAverageRatings: lastAverageRatings}, () => this.applyFiltersHandler(this.state.filter));\n  }\n  \n  render() {\n    \n    let geoInfo = null;\n    if (!this.state.geolocationPermission) {\n      geoInfo = (\n        <div className={classes.GeoInfo}>\n          <p>We don't have access to your location. If you let us to have it, please change settings and reload the page</p>\n        </div>\n      );\n    }\n    \n    return (\n      <div className={classes.MapContainer}>\n        <Modal \n          addingRestaurantStatus={this.state.addingRestaurantStatus} \n          addingRestaurantHideHandler={this.addingRestaurantHideHandler}\n        >\n          <AddRestaurant\n            addRestaurant={this.addRestaurant}\n            cancelAddingRestaurant={this.cancelAddingRestaurant}\n            newRestaurantData={this.state.newRestaurantData}\n            newRestaurantDataChangeHandler={this.newRestaurantDataChangeHandler}\n            addRestaurantButtonDisabled={this.state.addRestaurantButtonDisabled}\n          />\n        </Modal>\n        {geoInfo}\n        <div className={classes.Map} id=\"map\"></div>\n        <div className={classes.SideBar}>\n          <SideBar \n            googlePlacesFiltered={this.state.googlePlacesFiltered}\n            listStatus={this.state.listStatus}\n            filterData={this.state.filter}\n            filterButtonsDisabled={this.state.filterButtonsDisabled}\n            updateFiltersHandler={this.updateFiltersHandler}\n            resetFilter={this.resetFilter}\n            restaurantDetailsShowStatus={this.state.restaurantDetailsShowStatus}\n            restaurantDetailsShowHandler={this.restaurantDetailsShowHandler}\n            restaurantDetailsHideHandler={this.restaurantDetailsHideHandler}\n            restaurantDetailsData={this.state.restaurantDetailsData}\n            addingReviewStatus={this.state.addingReviewStatus}\n            addingReviewShowHandler={this.addingReviewShowHandler}\n            newReviewData={this.state.newReviewData}\n            newReviewDataChangeHandler={this.newReviewDataChangeHandler}\n            addReviewButtonDisabled={this.state.addReviewButtonDisabled}\n            addReview={this.addReview}\n            cancelAddingReview={this.cancelAddingReview}\n            newReviews={this.state.newReviews}\n            countAverageRating={this.countAverageRating}\n            getLastAverageRating={this.getLastAverageRating}\n            lastAverageRatings={this.state.lastAverageRatings}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Loading API script function\nfunction loadScript(url) {\n  let index = window.document.getElementsByTagName('script')[0];\n  let script = window.document.createElement('script');\n  script.src = url;\n  script.async = true;\n  script.defer = true;\n  index.parentNode.insertBefore(script, index);\n}\n\nexport default MapContainer;\n","import React from 'react';\nimport classes from './Filter.module.css';\n\nconst filter = (props) => {\n  return (\n    <div className={classes.Filter}>\n      <div className={classes.Title}>\n        <p>Display restaurants</p>\n      </div>\n      <div className={classes.Min}>\n        <div className={classes.Label}>Min</div>\n        <button className={classes.Less} disabled={props.filterButtonsDisabled.minLess} onClick={props.updateFiltersHandler} id=\"minLess\">Less</button>\n        <div className={classes.Value}>{props.filterData.filterMin}</div>\n        <button className={classes.More} disabled={props.filterButtonsDisabled.minMore} onClick={props.updateFiltersHandler} id=\"minMore\">More</button>\n        <div className={classes.Star}></div>\n      </div>\n      <div className={classes.Max}>\n        <div className={classes.Label}>Max</div>\n        <button className={classes.Less} disabled={props.filterButtonsDisabled.maxLess} onClick={props.updateFiltersHandler} id=\"maxLess\">Less</button>\n        <div className={classes.Value}>{props.filterData.filterMax}</div>\n        <button className={classes.More} disabled={props.filterButtonsDisabled.maxMore} onClick={props.updateFiltersHandler} id=\"maxMore\">More</button>\n        <div className={classes.Star}></div>\n      </div>\n      <div className={classes.Apply}>\n        <button onClick={props.resetFilter}>Reset filter</button>\n      </div>\n    </div>\n  );\n}\n\nexport default filter;\n","import React from 'react';\nimport classes from './Rating.module.css';\n\nconst starsRating = (props) => {\n  \n  // Preparing rating\n  let ratingContent = null;\n  let rating;\n  let percentRating;\n  //  When rating is available\n  if ((props.rating) && (props.rating !== 0)) {\n    rating = props.rating;\n    // Checking if rating is fixed to one decimal number\n    if (rating % 1 === 0) {\n      if (typeof rating === 'string') {\n        rating = Number(rating);\n      }\n      // If not then setting it to one decimal number\n      rating = rating.toFixed(1);\n    }\n    percentRating = props.rating * 20;\n    ratingContent = (\n      <div className={classes.Rating}>\n        <div className={classes.RatingNumber}>\n          {rating}\n        </div>\n        <div className={classes.RatingStars}>\n          <div className={classes.StarsRatingSprite}>\n            <span className={classes.StarsRatingSpriteRating} style={{width: percentRating + '%'}}>\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    //  When rating is not available\n    ratingContent = (\n      <div className={classes.NoRating}>\n        <p>No rating yet</p>\n      </div>\n    );\n  }\n  \n  return (\n    <React.Fragment>\n      {ratingContent}\n    </React.Fragment>\n  );\n}\n\nexport default starsRating;\n","// This component is using Font Awesome icon under the Creative Commons Attribution 4.0 International license.\n// This is link to the license: https://fontawesome.com/license\n// Standard black color of icon has been changed in fill attribute of icon.\n\nimport React from 'react';\nimport classes from './ListItem.module.css';\nimport Rating from '../../Rating/Rating';\nimport restaurantIcon from '../../../../../../assets/icons/utensils-solid.svg';\n\nconst listItem = (props) => {\n  \n  // Preparing place photo\n  let placePhotoUrl;\n  if (props.placeData.photos && props.placeData.photos[0].getUrl()) {\n    placePhotoUrl = props.placeData.photos[0].getUrl({maxWidth: 85, maxHeight: 85});\n  } else {\n    placePhotoUrl = restaurantIcon;\n  }\n  let placePicture = <img referrerPolicy='no-referrer' src={placePhotoUrl} alt='PlacePicture' />;\n  \n  //Preparing rating value\n  let ratingValue;\n  let index = props.lastAverageRatings.findIndex((elem) => (elem.place_id === props.placeData.place_id));\n  if (index !== -1) {\n    ratingValue = props.lastAverageRatings[index].lastAverageRating;\n  } else {\n    ratingValue = props.placeData.rating;\n  }\n  \n  return (\n    <div className={classes.ListItem} onClick={props.restaurantDetailsShowHandler}>\n      <div className={classes.PlaceDescription}>\n        <div className={classes.PlaceName}>\n          {props.placeData.name}\n        </div>\n        <div className={classes.PlaceVicinity}>\n          {props.placeData.vicinity}\n        </div>\n        <div className={classes.AverageRating}>\n          <Rating\n            rating={ratingValue}\n          />\n        </div>\n      </div>\n      <div className={classes.PlacePhoto}>\n        {placePicture}\n      </div>\n    </div>\n  );\n}\n\nexport default listItem;\n","import React from 'react';\nimport classes from './List.module.css';\nimport ListItem from './ListItem/ListItem';\n\nconst list = (props) => {\n  \n  let listItems;\n  \n  switch (props.listStatus) {\n    case 'loading':\n      listItems = <p>LOADING...</p>;\n      break;\n    case 'notFound':\n      listItems = (\n        <p className={classes.NotFound}>\n          There is no restaurant within 500 meters of the map center. Please move the map to change center of the map.\n        </p>\n      );\n      break;\n    case 'notInMapBounds':\n      listItems = (\n        <p className={classes.NotFound}>\n          There is no restaurants within actual map area. Please decrease zoom level or move the map.\n        </p>\n      );\n      break;\n    case 'notInFilterCriteria':\n      listItems = (\n        <p className={classes.NotFound}>\n          There is no restaurants to display for actual filter criteria. Please change filter criteria or move a map.\n        </p>\n      );\n      break;\n    case 'loaded':\n      listItems = props.googlePlacesFiltered.map((placeElement) => {\n        return (\n          <ListItem \n            key={placeElement.place_id}\n            placeData={placeElement}\n            restaurantDetailsShowHandler={props.restaurantDetailsShowHandler.bind(null, placeElement.place_id)}\n            lastAverageRatings={props.lastAverageRatings}\n          />\n        );\n      });\n      break;\n    default:\n      listItems = null;\n  }\n  \n  return (\n    <div className={classes.List}>\n      {listItems}\n    </div>\n  );\n}\n\nexport default list;\n","import React from 'react';\nimport classes from './AddReview.module.css';\n\nconst addReview = (props) => {\n  let stars = null;\n  let starsArray = [];\n  let starValue;\n  // Creating stars array\n  for (let i = 0; i < 5; i++) {\n    if (i >= props.newReviewData.userRating) {\n      starValue = 0;\n    } else {\n      starValue = 1;\n    }\n    starsArray.push(starValue);\n  }\n  stars = starsArray.map((elem, index) => {\n    if (elem === 0) {\n      return <div key={index + 1} className={classes.StarNotRated} id={index + 1} onClick={props.newReviewDataChangeHandler}></div>\n    } else {\n      return <div key={index + 1} className={classes.StarRated} id={index + 1} onClick={props.newReviewDataChangeHandler}></div>\n    }\n  });\n  \n  return(\n    <div className={classes.AddReview}>\n      <form className={classes.Fields}>\n        <div className={classes.Names}>\n          <div className={classes.FirstName}>\n            <input type='text' name='firstName' spellCheck='false' value={props.newReviewData.firstName} onChange={props.newReviewDataChangeHandler} required />\n            <label>First Name *</label>\n          </div>\n          <div className={classes.LastName}>\n            <input type='text' name='lastName' spellCheck='false' value={props.newReviewData.lastName} onChange={props.newReviewDataChangeHandler} required />\n            <label>Last Name *</label>\n          </div>\n        </div>\n        <div className={classes.Review}>\n          <textarea rows='3' type='text' name='review' spellCheck='false' value={props.newReviewData.review} onChange={props.newReviewDataChangeHandler} required />\n          <label>Review *</label>\n        </div>\n        <div className={classes.UserRating}>\n          <div className={classes.Description}>Rating</div>\n          <div className={classes.Stars}>{stars}</div>\n        </div>\n        <div className={classes.Buttons}>\n          <button className={classes.Add} disabled={props.addReviewButtonDisabled} onClick={props.addReview}>Add</button>\n          <button className={classes.Cancel} onClick={props.cancelAddingReview}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default addReview;\n","import React from 'react';\nimport classes from './Review.module.css';\nimport Rating from '../../../Rating/Rating';\n\nconst review = (props) => {\n  // Preparing author picture\n  let authorPhoto;\n  if (props.reviewData.profile_photo_url) {\n    authorPhoto = <img referrerPolicy='no-referrer' src={props.reviewData.profile_photo_url} alt='AuthorPhoto' />;\n  } else {\n    authorPhoto = (\n      <div className={classes.AuthorLetterContainer}>\n        <span className={classes.AuthorLetter}>{props.reviewData.author_name.charAt(0)}</span>\n      </div>\n    );\n  }\n  \n  return(\n    <div className={classes.ReviewContainer}>\n      <div className={classes.AuthorPhoto}>\n        {authorPhoto}\n      </div>\n      <div className={classes.Review}>\n        <div className={classes.AuthorName}>\n          {props.reviewData.author_name}\n        </div>\n        <div className={classes.ReviewRating}>\n          <Rating\n            rating={props.reviewData.rating}\n          />\n        </div>\n        <div className={classes.ReviewText}>\n          {props.reviewData.text}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default review;\n","import React from 'react';\nimport classes from './Reviews.module.css';\nimport AddReview from './AddReview/AddReview';\nimport Review from './Review/Review';\n\nconst reviews = (props) => {\n  // Add review\n  let addReviewContent;\n  let addButtonContent;\n  if (props.addingReviewStatus) {\n    addButtonContent = 'Reset';\n    addReviewContent = (\n      <AddReview\n        newReviewData={props.newReviewData}\n        newReviewDataChangeHandler={props.newReviewDataChangeHandler}\n        addReviewButtonDisabled={props.addReviewButtonDisabled}\n        addReview={props.addReview}\n        cancelAddingReview={props.cancelAddingReview}\n      />\n    );\n  } else {\n    addButtonContent = 'Add';\n    addReviewContent = null;\n  }\n  // Reviews\n  let reviews = null;\n  if (props.reviewsData.length !== 0) {\n    reviews = props.reviewsData.map((reviewElement, index) => {\n      return (\n        <Review \n          key={index}\n          reviewData={reviewElement}\n        />\n      );\n    });\n  }\n  \n  return(\n    <div className={classes.Reviews}>\n      <div className={classes.Header}>\n        <p>Reviews</p>\n        <button onClick={props.addingReviewShowHandler}>{addButtonContent}</button>\n      </div>\n        {addReviewContent}\n        {reviews}\n    </div>\n  );\n}\n\nexport default reviews;\n","// This component is using Font Awesome icons under the Creative Commons Attribution 4.0 International license.\n// This is link to the license: https://fontawesome.com/license\n// Standard black colors of some icons has been changed in fill attribute of icons.\n\nimport React, { Component } from 'react';\nimport classes from './RestaurantDetails.module.css';\nimport closeIcon from '../../../../../assets/icons/times-circle-regular.svg';\nimport addressIcon from '../../../../../assets/icons/map-marker-alt-solid.svg';\nimport phoneIcon from '../../../../../assets/icons/phone-solid.svg';\nimport websiteIcon from '../../../../../assets/icons/at-solid.svg';\nimport Reviews from './Reviews/Reviews';\nimport Rating from '../Rating/Rating';\n\nclass RestaurantDetails extends Component {\n  \n  componentDidMount() {\n    document.getElementById('top').scrollIntoView();\n  }\n  \n  render() {\n    let lat;\n    let lng;\n    if (typeof (this.props.restaurantDetailsData.place_id) === 'number') {\n      lat = this.props.restaurantDetailsData.lat;\n      lng = this.props.restaurantDetailsData.lng;\n    } else {\n      lat = this.props.restaurantDetailsData.geometry.location.lat();\n      lng = this.props.restaurantDetailsData.geometry.location.lng();\n    }\n    // Creating street view image request\n    let streetViewRequest = 'https://maps.googleapis.com/maps/api/streetview?size=640x350&location=' + lat + ',' + lng + '&fov=120&key=AIzaSyCB5-GzZHw_xyz2Aj9-p5XDVEkrIUb1cD8';\n    // Preparing place phone number\n    let phoneNumber;\n    if (this.props.restaurantDetailsData.placeDetails.formatted_phone_number) {\n      phoneNumber = this.props.restaurantDetailsData.placeDetails.formatted_phone_number;\n    } else {\n      phoneNumber = 'Not Available';\n    }\n    // Preparing place website address\n    let websiteAddress;\n    if (this.props.restaurantDetailsData.placeDetails.website) {\n      websiteAddress = this.props.restaurantDetailsData.placeDetails.website;\n    } else {\n      websiteAddress = 'Not Available';\n    }\n    \n    let reviewsData = [];\n    let rating = this.props.restaurantDetailsData.rating;\n    \n    if (this.props.newReviews.length !== 0 ) {\n      let index = this.props.newReviews.findIndex((elem) => (elem.place_id === this.props.restaurantDetailsData.place_id));\n      if (index !== -1) {\n        this.props.newReviews[index].reviews.forEach((elem => {\n          reviewsData.push(elem);\n        }));\n      }\n    }\n    if (this.props.restaurantDetailsData.placeDetails.reviews) {\n      this.props.restaurantDetailsData.placeDetails.reviews.forEach((elem => {\n        reviewsData.push(elem);\n      }));\n    }\n    if (reviewsData.length !== 0) {\n      rating = this.props.countAverageRating(reviewsData).toFixed(1);\n    } else {\n      rating = 0;\n    }\n    this.props.getLastAverageRating(rating);\n    \n    return(\n      <div className={classes.RestaurantDetails}>\n        <div className={classes.Title} id='top'>\n          <div className={classes.NameAndClose}>\n            <div className={classes.Name}>\n              {this.props.restaurantDetailsData.name}\n            </div>\n            <div className={classes.Close} title='Close'>\n              <img src={closeIcon} alt='closeIcon' onClick={this.props.restaurantDetailsHideHandler} />\n            </div>\n          </div>\n          <div className={classes.AverageRating}>\n            <Rating\n              rating={rating}\n            />\n          </div>\n        </div>\n        <div className={classes.StreetVievContainer}>\n          <img src={streetViewRequest} alt='Static Street View' />\n        </div>\n        <div className={classes.AddressInfo}>\n          <img src={addressIcon} alt='addressIcon' />\n          <p>{this.props.restaurantDetailsData.vicinity}</p>\n        </div>\n        <div className={classes.PhoneInfo}>\n          <img src={phoneIcon} alt='phoneIcon' />\n          <p>{phoneNumber}</p>\n        </div>\n        <div className={classes.WebsiteInfo}>\n          <img src={websiteIcon} alt='websiteIcon' />\n          <p>\n            <a href={this.props.restaurantDetailsData.placeDetails.website} target='_blank'>\n              {websiteAddress}\n            </a>\n          </p>\n        </div>\n        <Reviews \n          reviewsData={reviewsData}\n          addingReviewStatus={this.props.addingReviewStatus}\n          addingReviewShowHandler={this.props.addingReviewShowHandler}\n          newReviewData={this.props.newReviewData}\n          newReviewDataChangeHandler={this.props.newReviewDataChangeHandler}\n          addReviewButtonDisabled={this.props.addReviewButtonDisabled}\n          addReview={this.props.addReview}\n          cancelAddingReview={this.props.cancelAddingReview}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RestaurantDetails;\n","import React from 'react';\nimport Filter from './Filter/Filter';\nimport List from './List/List';\nimport RestaurantDetails from './RestaurantDetails/RestaurantDetails';\n\nconst sidebar = (props) => {\n  \n  let sideBarContent = null;\n  \n  if (!props.restaurantDetailsShowStatus) {\n    \n    sideBarContent = (\n      <React.Fragment>\n        <Filter\n          filterData={props.filterData}\n          filterButtonsDisabled={props.filterButtonsDisabled}\n          updateFiltersHandler={props.updateFiltersHandler}\n          resetFilter={props.resetFilter}\n        />\n        <List \n          googlePlacesFiltered={props.googlePlacesFiltered}\n          listStatus={props.listStatus}\n          restaurantDetailsShowHandler={props.restaurantDetailsShowHandler}\n          lastAverageRatings={props.lastAverageRatings}\n        />\n      </React.Fragment>\n    );\n    \n  } else {\n    \n    sideBarContent = (\n      <React.Fragment>\n        <RestaurantDetails\n          restaurantDetailsData={props.restaurantDetailsData}\n          restaurantDetailsHideHandler={props.restaurantDetailsHideHandler}\n          addingReviewStatus={props.addingReviewStatus}\n          addingReviewShowHandler={props.addingReviewShowHandler}\n          newReviewData={props.newReviewData}\n          newReviewDataChangeHandler={props.newReviewDataChangeHandler}\n          addReviewButtonDisabled={props.addReviewButtonDisabled}\n          addReview={props.addReview}\n          cancelAddingReview={props.cancelAddingReview}\n          newReviews={props.newReviews}\n          countAverageRating={props.countAverageRating}\n          getLastAverageRating={props.getLastAverageRating}\n        />\n      </React.Fragment>\n    );\n  }\n  \n  return(\n    <React.Fragment>\n      {sideBarContent}\n    </React.Fragment>\n  );\n}\n\nexport default sidebar;\n","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n  props.addingRestaurantStatus ? <div className={classes.Backdrop} onClick={props.addingRestaurantHideHandler}></div> : null\n);\n\nexport default backdrop;\n","import React from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n  <React.Fragment>\n    <Backdrop\n      addingRestaurantStatus={props.addingRestaurantStatus}\n      addingRestaurantHideHandler={props.addingRestaurantHideHandler}\n    />\n    <div \n      className={classes.Modal}\n      style={{\n        transform: props.addingRestaurantStatus ? 'translateY(0)' : 'translateY(-100vh)',\n        opacity: props.addingRestaurantStatus ? '1' : '0'\n      }}\n    >\n      {props.children}\n    </div>\n  </React.Fragment>\n);\n\nexport default modal;\n","import React from 'react';\nimport classes from './AddRestaurant.module.css';\n\nconst addRestaurant = (props) => {\n  return(\n    <div className={classes.AddRestaurant}>\n      <h1>Now you can add a new restaurant</h1>\n      <h2>Please fill up fields and click Add</h2>\n      <h2>Field marked with * is required</h2>\n      <h3>Adding a new restaurant will reset filter criteria</h3>\n      <form className={classes.Fields}>\n        <div>\n          <input type='text' name='name' spellCheck='false' value={props.newRestaurantData.name} onChange={props.newRestaurantDataChangeHandler} required />\n          <label>Name *</label>\n        </div>\n        <div>\n          <input type='text' name='phone' spellCheck='false' value={props.newRestaurantData.phone} onChange={props.newRestaurantDataChangeHandler} required />\n          <label>Phone</label>\n        </div>\n        <div>\n          <input type='text' name='website' spellCheck='false' value={props.newRestaurantData.website} onChange={props.newRestaurantDataChangeHandler} required />\n          <label>Website</label>\n        </div>\n        <div className={classes.Buttons}>\n          <button className={classes.Add} disabled={props.addRestaurantButtonDisabled} onClick={props.addRestaurant}>Add</button>\n          <button className={classes.Cancel} onClick={props.cancelAddingRestaurant}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default addRestaurant;\n","import React from 'react';\nimport classes from './Layout.module.css';\nimport MapContainer from '../../../containers/MapContainer/MapContainer';\n\nconst layout = () => {\n  return (\n    <div className={classes.Layout}>\n      <div className={classes.Header}>\n        <div className={classes.Title}>\n          <h1>Restaurant Review</h1>\n        </div>\n        <div className={classes.Position}>\n          <div className={classes.Marker}>\n            <img src='http://maps.google.com/mapfiles/ms/icons/green-dot.png' alt='positionMarker' />\n          </div>\n          <div className={classes.Description}>\n            <h2> - Your position</h2>\n          </div>\n        </div>\n        <div className={classes.Info}>\n          <div className={classes.InfoContent}>\n            <h2>Right click on a map to add restaurant</h2>\n            <h3>To display restaurants with no rating yet use 0 in filter</h3>\n          </div>\n        </div>\n      </div>\n      <div className={classes.Main}>\n        <MapContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default layout;\n","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Layout from './Layout/Layout';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={classes.App}>\n        <Layout />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}